[{"/Users/celeste/Documents/Programacion/Practica/Challenge/scalechat/Front/src/index.js":"1","/Users/celeste/Documents/Programacion/Practica/Challenge/scalechat/Front/src/App.js":"2","/Users/celeste/Documents/Programacion/Practica/Challenge/scalechat/Front/src/components/MainLayout.js":"3","/Users/celeste/Documents/Programacion/Practica/Challenge/scalechat/Front/src/components/Login.js":"4","/Users/celeste/Documents/Programacion/Practica/Challenge/scalechat/Front/src/components/Chat.js":"5","/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/index.js":"6","/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/App.js":"7","/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/Join/Join.js":"8","/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/Chat/Chat.js":"9","/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/InfoBar/InfoBar.js":"10","/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/Input/Input.js":"11","/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/Messages/Messages.js":"12","/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/Messages/Message/Message.js":"13","/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/ImgUpload/ImgUpload.js":"14","/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/Modal/ImgModal.js":"15","/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/ImgUpload/Upload/Upload.js":"16"},{"size":146,"mtime":1614019949347,"results":"17","hashOfConfig":"18"},{"size":401,"mtime":1614695975968,"results":"19","hashOfConfig":"18"},{"size":837,"mtime":1614025586445,"results":"20","hashOfConfig":"18"},{"size":1240,"mtime":1614025714067,"results":"21","hashOfConfig":"18"},{"size":98,"mtime":1614695395097,"results":"22","hashOfConfig":"18"},{"size":146,"mtime":1614019949347,"results":"23","hashOfConfig":"24"},{"size":604,"mtime":1615661572926,"results":"25","hashOfConfig":"24"},{"size":1137,"mtime":1615688169831,"results":"26","hashOfConfig":"24"},{"size":1839,"mtime":1615854304046,"results":"27","hashOfConfig":"24"},{"size":577,"mtime":1615676897159,"results":"28","hashOfConfig":"24"},{"size":813,"mtime":1615853244901,"results":"29","hashOfConfig":"24"},{"size":473,"mtime":1615856623050,"results":"30","hashOfConfig":"24"},{"size":1101,"mtime":1615856969776,"results":"31","hashOfConfig":"24"},{"size":4036,"mtime":1615855276100,"results":"32","hashOfConfig":"24"},{"size":1306,"mtime":1615851267501,"results":"33","hashOfConfig":"24"},{"size":583,"mtime":1615766448948,"results":"34","hashOfConfig":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"id6hbc",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"17ffqmd",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"/Users/celeste/Documents/Programacion/Practica/Challenge/scalechat/Front/src/index.js",[],"/Users/celeste/Documents/Programacion/Practica/Challenge/scalechat/Front/src/App.js",[],"/Users/celeste/Documents/Programacion/Practica/Challenge/scalechat/Front/src/components/MainLayout.js",["71"],"/Users/celeste/Documents/Programacion/Practica/Challenge/scalechat/Front/src/components/Login.js",[],"/Users/celeste/Documents/Programacion/Practica/Challenge/scalechat/Front/src/components/Chat.js",[],"/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/index.js",[],["72","73"],"/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/App.js",[],"/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/Join/Join.js",[],"/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/Chat/Chat.js",["74","75"],"import React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\n\nimport InfoBar from \"../InfoBar/InfoBar\";\nimport Input from \"../Input/Input\";\nimport Messages from \"../Messages/Messages\";\nimport ImgModal from \"../Modal/ImgModal\";\n\nimport \"./Chat.css\";\n\nlet socket;\n\nconst Chat = ({ location }) => {\n  console.log(\"entrando al chat\");\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [picture, setPicture] = useState(null);\n\n  const sendingPicture = (picture) => {\n    setPicture(picture);\n    console.log(picture);\n    setMessage(picture);\n  };\n\n  const ENDPOINT = \"localhost:5000\";\n\n  useEffect(() => {\n    const { name, room } = queryString.parse(location.search);\n\n    socket = io(ENDPOINT);\n\n    setName(name);\n    setRoom(room);\n\n    socket.emit(\"join\", { name, room }, () => {});\n\n    return () => {\n      socket.emit(\"disconnected\");\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n\n  useEffect(() => {\n    socket.on(\"message\", (message) => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    if (message) {\n      socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\n    }\n  };\n\n  return (\n    <div\n      className=\"outerContainer\"\n      style={{ backgroundImage: \"url(/images/bg01.svg)\" }}\n    >\n      <div className=\"container\">\n        <InfoBar room={room} />\n        <Messages messages={messages} name={name} />\n\n        <Input\n          message={message}\n          setMessage={setMessage}\n          sendMessage={sendMessage}\n          sendingPicture={sendingPicture}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n","/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/InfoBar/InfoBar.js",[],"/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/Input/Input.js",["76"],"import React, { useState } from \"react\";\nimport ImgModal from \"../Modal/ImgModal\";\nimport { Button } from \"react-bootstrap\";\n\nimport \"./Input.css\";\n\nconst Input = ({ message, setMessage, sendMessage, sendingPicture }) => {\n  return (\n    <form className=\"form\">\n      <input\n        className=\"input\"\n        type=\"text\"\n        placeholder=\"Type a message...\"\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n        onKeyPress={(e) => (e.key === \"Enter\" ? sendMessage(e) : null)}\n      />\n      <div className=\"buttonCont\">\n        <ImgModal sendingPicture={sendingPicture} />\n      </div>\n      <div className=\"buttonCont\">\n        <Button onClick={sendMessage}>\n          <i class=\"fas fa-paper-plane\"></i>\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nexport default Input;\n","/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/Messages/Messages.js",[],"/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/Messages/Message/Message.js",["77","78"],"/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/ImgUpload/ImgUpload.js",["79"],"import React, { useRef, useEffect, useState } from \"react\";\nimport Upload from \"./Upload/Upload\";\nimport { Button, InputGroup, FormControl } from \"react-bootstrap\";\n\nimport \"./ImgUpload.css\";\n\nconst ImgUpload = ({ sendPicture }) => {\n  const canvas = useRef(null);\n  const canvasimg = useRef(null);\n\n  const [start, setStart] = useState([]);\n  const [finish, setFinish] = useState([]);\n  const [width, setWidth] = useState(null);\n  const [height, setHeight] = useState(null);\n  const [mouseDown, setMouseDown] = useState(false);\n  const [ctxImg, setCtxImg] = useState({});\n  const [ctx, setCtx] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [image, setImage] = useState({});\n  const [tag, setTag] = useState(\"\");\n\n  useEffect(() => {\n    setCtxImg(canvasimg.current.getContext(\"2d\"));\n    setCtx(canvas.current.getContext(\"2d\"));\n  }, []);\n\n  const handleImage = (e) => {\n    var reader = new FileReader();\n    reader.onload = function (event) {\n      var img = new Image();\n      img.onload = function () {\n        ctxImg.drawImage(img, 0, 0, 500, 500);\n        setLoading(false);\n      };\n      img.src = event.target.result;\n    };\n    reader.readAsDataURL(e.target.files[0]);\n  };\n\n  const handleMouseDown = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setFinish([]);\n    setMouseDown(true);\n    setStart([e.nativeEvent.offsetX, e.nativeEvent.offsetY]);\n  };\n\n  const handleMouseUp = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setMouseDown(false);\n  };\n\n  const handleMouseMove = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!mouseDown) {\n      sendPicture(canvasimg.current.toDataURL(\"image/png\"));\n      return;\n    }\n\n    setFinish([e.nativeEvent.offsetX, e.nativeEvent.offsetY]);\n    ctx.clearRect(0, 0, canvas.current.width, canvas.current.height);\n    ctx.strokeStyle = \"black\";\n\n    const startx = start[0];\n    const starty = start[1];\n    const width = finish[0] - start[0];\n    const height = finish[1] - start[1];\n\n    ctx.strokeRect(startx, starty, width, height);\n\n    setWidth(finish[0] - start[0]);\n    setHeight(finish[1] - start[1]);\n  };\n\n  const handleTag = (e) => {\n    ctxImg.strokeRect(start[0], start[1], width, height);\n\n    if (tag) {\n      ctxImg.font = \"20px roboto\";\n      ctxImg.fillText(tag, finish[0], finish[1]);\n    }\n    let imageData = ctxImg.getImageData(0, 0, 500, 500);\n\n    setImage(imageData);\n    setHeight(null);\n    setWidth(null);\n    setTag(\"\");\n    sendPicture(canvasimg.current.toDataURL(\"image/png\"));\n  };\n\n  return (\n    <React.Fragment>\n      {loading ? <Upload handleImage={handleImage} /> : null}\n      <div\n        style={{\n          position: \"absolute\",\n          width: \"500px\",\n          height: \"500px\",\n          padding: \"30px\",\n        }}\n      >\n        {height ? (\n          <InputGroup\n            className=\"mb-3\"\n            style={{ zIndex: \"3\", position: \"absolute\" }}\n          >\n            <FormControl\n              placeholder=\"Choose a tag's name\"\n              aria-label=\"Choose a tag's name\"\n              aria-describedby=\"basic-addon2\"\n              onChange={(e) => {\n                setTag(e.target.value);\n              }}\n              value={tag}\n            />\n            <InputGroup.Append>\n              <Button variant=\"outline-secondary\" onClick={handleTag}>\n                <i class=\"fas fa-user-tag\"></i>Tag\n              </Button>\n            </InputGroup.Append>\n          </InputGroup>\n        ) : null}\n        <canvas\n          ref={canvasimg}\n          height=\"500\"\n          width=\"500\"\n          style={{ position: \"absolute\", left: \"0\", top: \"0\", zIndex: \"0\" }}\n        ></canvas>\n        <canvas\n          ref={canvas}\n          height=\"500\"\n          width=\"500\"\n          onMouseDown={handleMouseDown}\n          onMouseUp={handleMouseUp}\n          onMouseMove={handleMouseMove}\n          style={{ position: \"absolute\", left: \"0\", top: \"0\", zIndex: \"1\" }}\n        ></canvas>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default ImgUpload;\n","/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/Modal/ImgModal.js",[],"/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/ImgUpload/Upload/Upload.js",[],{"ruleId":"80","severity":1,"message":"81","line":8,"column":18,"nodeType":"82","messageId":"83","endLine":8,"endColumn":27},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"80","severity":1,"message":"88","line":8,"column":8,"nodeType":"82","messageId":"83","endLine":8,"endColumn":16},{"ruleId":"80","severity":1,"message":"89","line":20,"column":10,"nodeType":"82","messageId":"83","endLine":20,"endColumn":17},{"ruleId":"80","severity":1,"message":"90","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":19,"column":11,"nodeType":"93","endLine":19,"endColumn":79},{"ruleId":"91","severity":1,"message":"92","line":29,"column":11,"nodeType":"93","endLine":29,"endColumn":79},{"ruleId":"80","severity":1,"message":"94","line":19,"column":10,"nodeType":"82","messageId":"83","endLine":19,"endColumn":15},"no-unused-vars","'setLogged' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["95"],"no-negated-in-lhs",["96"],"'ImgModal' is defined but never used.","'picture' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'image' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]