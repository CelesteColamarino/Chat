{"ast":null,"code":"var _jsxFileName = \"/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/ImgUpload/ImgUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImgUpload = () => {\n  _s();\n\n  //   var imageLoader = document.getElementById(\"imageLoader\");\n  //   imageLoader.addEventListener(\"change\", handleImage, false);\n  const canvas = useRef(null);\n  var ctx = canvas.getContext(\"2d\");\n\n  const handleImage = e => {\n    var reader = new FileReader();\n\n    reader.onload = function (event) {\n      var img = new Image();\n\n      img.onload = function () {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.drawImage(img, 0, 0);\n      };\n\n      img.src = event.target.result;\n    };\n\n    reader.readAsDataURL(e.target.files[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Image File:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleImage,\n      type: \"file\",\n      id: \"imageLoader\",\n      name: \"imageLoader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImgUpload, \"OiAXxxxsYj+jaR+r4tdEB3xCcqw=\");\n\n_c = ImgUpload;\nexport default ImgUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImgUpload\");","map":{"version":3,"sources":["/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/ImgUpload/ImgUpload.js"],"names":["React","useRef","useEffect","useState","ImgUpload","canvas","ctx","getContext","handleImage","e","reader","FileReader","onload","event","img","Image","width","height","drawImage","src","target","result","readAsDataURL","files"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB;AACA;AACA,QAAMC,MAAM,GAAGJ,MAAM,CAAC,IAAD,CAArB;AACA,MAAIK,GAAG,GAAGD,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAV;;AAEA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzB,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,UAAUC,KAAV,EAAiB;AAC/B,UAAIC,GAAG,GAAG,IAAIC,KAAJ,EAAV;;AACAD,MAAAA,GAAG,CAACF,MAAJ,GAAa,YAAY;AACvBP,QAAAA,MAAM,CAACW,KAAP,GAAeF,GAAG,CAACE,KAAnB;AACAX,QAAAA,MAAM,CAACY,MAAP,GAAgBH,GAAG,CAACG,MAApB;AACAX,QAAAA,GAAG,CAACY,SAAJ,CAAcJ,GAAd,EAAmB,CAAnB,EAAsB,CAAtB;AACD,OAJD;;AAKAA,MAAAA,GAAG,CAACK,GAAJ,GAAUN,KAAK,CAACO,MAAN,CAAaC,MAAvB;AACD,KARD;;AASAX,IAAAA,MAAM,CAACY,aAAP,CAAqBb,CAAC,CAACW,MAAF,CAASG,KAAT,CAAe,CAAf,CAArB;AACD,GAZD;;AAcA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,QAAQ,EAAEf,WADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,EAAE,EAAC,aAHL;AAIE,MAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE;AAAQ,MAAA,GAAG,EAAEH;AAAb;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAhCD;;GAAMD,S;;KAAAA,S;AAkCN,eAAeA,SAAf","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\n\nconst ImgUpload = () => {\n  //   var imageLoader = document.getElementById(\"imageLoader\");\n  //   imageLoader.addEventListener(\"change\", handleImage, false);\n  const canvas = useRef(null);\n  var ctx = canvas.getContext(\"2d\");\n\n  const handleImage = (e) => {\n    var reader = new FileReader();\n    reader.onload = function (event) {\n      var img = new Image();\n      img.onload = function () {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.drawImage(img, 0, 0);\n      };\n      img.src = event.target.result;\n    };\n    reader.readAsDataURL(e.target.files[0]);\n  };\n\n  return (\n    <React.Fragment>\n      <label>Image File:</label>\n      <input\n        onChange={handleImage}\n        type=\"file\"\n        id=\"imageLoader\"\n        name=\"imageLoader\"\n      />\n      <canvas ref={canvas}></canvas>\n    </React.Fragment>\n  );\n};\n\nexport default ImgUpload;\n"]},"metadata":{},"sourceType":"module"}