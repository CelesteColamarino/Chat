{"ast":null,"code":"var _jsxFileName = \"/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/ImgUpload/ImgUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImgUpload = () => {\n  _s();\n\n  const canvas = useRef(null);\n  const canvasimg = useRef(null);\n  const [start, setStart] = useState([]);\n  const [finish, setFinish] = useState([]);\n  const [mouseDown, setMouseDown] = useState(false);\n  const [ctxImg, setCtxImg] = useState({});\n  const [ctx, setCtx] = useState({});\n  const [loaded, setLoaded] = useState(false);\n  const [image, setImage] = useState(null);\n  useEffect(() => {\n    // setCtxImg(canvasimg.current.getContext(\"2d\"));\n    setCtx(canvas.current.getContext(\"2d\"));\n  }, []);\n\n  const handleImage = e => {\n    var reader = new FileReader();\n\n    reader.onload = function (event) {\n      var img = new Image();\n\n      img.onload = function () {\n        setLoaded(true);\n      };\n\n      img.src = event.target.result;\n      console.log(img.src);\n    };\n\n    reader.readAsDataURL(e.target.files[0]); // setImage(blob);\n\n    console.log(img.src);\n  };\n\n  const mouseClicked = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setFinish([]);\n    setMouseDown(true);\n    setStart([e.nativeEvent.offsetX, e.nativeEvent.offsetY]);\n  };\n\n  const mouseReleased = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setMouseDown(false);\n  };\n\n  const mouseMove = e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (!mouseDown) {\n      return;\n    }\n\n    setFinish([e.nativeEvent.offsetX, e.nativeEvent.offsetY]);\n    ctx.clearRect(0, 0, canvas.current.width, canvas.current.height);\n    ctx.strokeStyle = \"#065fe3d4\";\n    const startx = start[0];\n    const starty = start[1];\n    const width = finish[0] - start[0];\n    const height = finish[1] - start[1];\n    ctx.strokeRect(startx, starty, width, height);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Image File:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        zIndex: \"2\",\n        position: \"absolute\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleImage,\n        type: \"file\",\n        name: \"imageLoader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        backgroundColor: \"red\",\n        width: \"500px\",\n        height: \"500px\",\n        padding: \"30px\"\n      },\n      children: [loaded ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }, this) : \"No se ha cargado la imagen\", /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvas,\n        onMouseDown: mouseClicked,\n        onMouseUp: mouseReleased,\n        onMouseMove: mouseMove,\n        style: {\n          position: \"absolute\",\n          left: \"0\",\n          top: \"0\",\n          zIndex: \"1\",\n          width: \"100%\",\n          height: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImgUpload, \"bO+i+nssuhtVW2PHS67fBrbQdEU=\");\n\n_c = ImgUpload;\nexport default ImgUpload; // const handleImage = (e) => {\n//   var reader = new FileReader();\n//   reader.onload = function (event) {\n//     var img = new Image();\n//     img.onload = function () {\n//       // canvasimg.current.width = \"500px\";\n//       // canvasimg.current.height = \"500px\";\n//       // canvas.current.width = \"500px\";\n//       // canvas.current.height = \"500px\";\n//       ctxImg.drawImage(img, 0, 0);\n//     };\n//     img.src = event.target.result;\n//   };\n//   reader.readAsDataURL(e.target.files[0]);\n// };\n\nvar _c;\n\n$RefreshReg$(_c, \"ImgUpload\");","map":{"version":3,"sources":["/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/ImgUpload/ImgUpload.js"],"names":["React","useRef","useEffect","useState","ImgUpload","canvas","canvasimg","start","setStart","finish","setFinish","mouseDown","setMouseDown","ctxImg","setCtxImg","ctx","setCtx","loaded","setLoaded","image","setImage","current","getContext","handleImage","e","reader","FileReader","onload","event","img","Image","src","target","result","console","log","readAsDataURL","files","mouseClicked","preventDefault","stopPropagation","nativeEvent","offsetX","offsetY","mouseReleased","mouseMove","clearRect","width","height","strokeStyle","startx","starty","strokeRect","zIndex","position","backgroundColor","padding","left","top"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\n\nconst ImgUpload = () => {\n  const canvas = useRef(null);\n  const canvasimg = useRef(null);\n\n  const [start, setStart] = useState([]);\n  const [finish, setFinish] = useState([]);\n  const [mouseDown, setMouseDown] = useState(false);\n  const [ctxImg, setCtxImg] = useState({});\n  const [ctx, setCtx] = useState({});\n  const [loaded, setLoaded] = useState(false);\n  const [image, setImage] = useState(null);\n\n  useEffect(() => {\n    // setCtxImg(canvasimg.current.getContext(\"2d\"));\n    setCtx(canvas.current.getContext(\"2d\"));\n  }, []);\n\n  const handleImage = (e) => {\n    var reader = new FileReader();\n    reader.onload = function (event) {\n      var img = new Image();\n      img.onload = function () {\n        setLoaded(true);\n      };\n      img.src = event.target.result;\n      console.log(img.src);\n    };\n    reader.readAsDataURL(e.target.files[0]);\n    // setImage(blob);\n\n    console.log(img.src);\n  };\n\n  const mouseClicked = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setFinish([]);\n    setMouseDown(true);\n    setStart([e.nativeEvent.offsetX, e.nativeEvent.offsetY]);\n  };\n\n  const mouseReleased = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setMouseDown(false);\n  };\n\n  const mouseMove = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!mouseDown) {\n      return;\n    }\n\n    setFinish([e.nativeEvent.offsetX, e.nativeEvent.offsetY]);\n    ctx.clearRect(0, 0, canvas.current.width, canvas.current.height);\n    ctx.strokeStyle = \"#065fe3d4\";\n\n    const startx = start[0];\n    const starty = start[1];\n    const width = finish[0] - start[0];\n    const height = finish[1] - start[1];\n\n    ctx.strokeRect(startx, starty, width, height);\n  };\n\n  return (\n    <React.Fragment>\n      <label>Image File:</label>\n      <div style={{ zIndex: \"2\", position: \"absolute\" }}>\n        <input onChange={handleImage} type=\"file\" name=\"imageLoader\" />\n      </div>\n      <div\n        style={{\n          position: \"absolute\",\n          backgroundColor: \"red\",\n          width: \"500px\",\n          height: \"500px\",\n          padding: \"30px\",\n        }}\n      >\n        {/* <canvas\n          ref={canvasimg}\n          style={{\n            position: \"absolute\",\n            left: \"0\",\n            top: \"0\",\n            zIndex: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n          }}\n        ></canvas> */}\n        {loaded ? <img src={image} /> : \"No se ha cargado la imagen\"}\n        <canvas\n          ref={canvas}\n          onMouseDown={mouseClicked}\n          onMouseUp={mouseReleased}\n          onMouseMove={mouseMove}\n          style={{\n            position: \"absolute\",\n            left: \"0\",\n            top: \"0\",\n            zIndex: \"1\",\n            width: \"100%\",\n            height: \"100%\",\n          }}\n        ></canvas>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default ImgUpload;\n\n// const handleImage = (e) => {\n//   var reader = new FileReader();\n//   reader.onload = function (event) {\n//     var img = new Image();\n//     img.onload = function () {\n//       // canvasimg.current.width = \"500px\";\n//       // canvasimg.current.height = \"500px\";\n//       // canvas.current.width = \"500px\";\n//       // canvas.current.height = \"500px\";\n//       ctxImg.drawImage(img, 0, 0);\n//     };\n//     img.src = event.target.result;\n//   };\n//   reader.readAsDataURL(e.target.files[0]);\n// };\n"]},"metadata":{},"sourceType":"module"}