{"ast":null,"code":"var _jsxFileName = \"/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/ImgUpload/ImgUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport Upload from \"./Upload/Upload\";\nimport Tag from \"./Tag/Tag\";\nimport { Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport \"./ImgUpload.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImgUpload = ({\n  sendPicture\n}) => {\n  _s();\n\n  const canvas = useRef(null);\n  const canvasimg = useRef(null);\n  const [start, setStart] = useState([]);\n  const [finish, setFinish] = useState([]);\n  const [width, setWidth] = useState(null);\n  const [height, setHeight] = useState(null);\n  const [mouseDown, setMouseDown] = useState(false);\n  const [ctxImg, setCtxImg] = useState({});\n  const [ctx, setCtx] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [image, setImage] = useState({});\n  const [tag, setTag] = useState(\"\");\n  useEffect(() => {\n    setCtxImg(canvasimg.current.getContext(\"2d\"));\n    setCtx(canvas.current.getContext(\"2d\"));\n  }, []);\n\n  const handleImage = e => {\n    var reader = new FileReader();\n\n    reader.onload = function (event) {\n      var img = new Image();\n\n      img.onload = function () {\n        ctxImg.drawImage(img, 0, 0, 500, 500);\n        setLoading(false);\n      };\n\n      img.src = event.target.result;\n    };\n\n    reader.readAsDataURL(e.target.files[0]);\n  };\n\n  const handleMouseDown = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setFinish([]);\n    setMouseDown(true);\n    setStart([e.nativeEvent.offsetX, e.nativeEvent.offsetY]);\n  };\n\n  const handleMouseUp = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setMouseDown(false);\n  };\n\n  const handleMouseMove = e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (!mouseDown) {\n      sendPicture(canvasimg.current.toDataURL(\"image/png\"));\n      return;\n    }\n\n    setFinish([e.nativeEvent.offsetX, e.nativeEvent.offsetY]);\n    ctx.clearRect(0, 0, canvas.current.width, canvas.current.height);\n    ctx.strokeStyle = \"black\";\n    const startx = start[0];\n    const starty = start[1];\n    const width = finish[0] - start[0];\n    const height = finish[1] - start[1];\n    ctx.strokeRect(startx, starty, width, height);\n    setWidth(finish[0] - start[0]);\n    setHeight(finish[1] - start[1]);\n  };\n\n  const handleTag = e => {\n    ctxImg.strokeRect(start[0], start[1], width, height);\n\n    if (tag) {\n      ctxImg.font = \"20px roboto\";\n      ctxImg.fillText(tag, finish[0], finish[1]);\n    }\n\n    let imageData = ctxImg.getImageData(0, 0, 500, 500);\n    setImage(imageData);\n    setHeight(null);\n    setWidth(null);\n    setTag(\"\");\n    sendPicture(canvasimg.current.toDataURL(\"image/png\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [loading ? /*#__PURE__*/_jsxDEV(Upload, {\n      handleImage: handleImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 18\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        width: \"500px\",\n        height: \"500px\",\n        padding: \"30px\"\n      },\n      children: [height ? /*#__PURE__*/_jsxDEV(Tag, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this) : // <InputGroup\n      //   className=\"mb-3\"\n      //   style={{ zIndex: \"3\", position: \"absolute\" }}\n      // >\n      //   <FormControl\n      //     placeholder=\"Choose a tag's name\"\n      //     aria-label=\"Choose a tag's name\"\n      //     aria-describedby=\"basic-addon2\"\n      //     onChange={(e) => {\n      //       setTag(e.target.value);\n      //     }}\n      //     value={tag}\n      //   />\n      //   <InputGroup.Append>\n      //     <Button variant=\"outline-secondary\" onClick={handleTag}>\n      //       <i class=\"fas fa-user-tag\"></i>Tag\n      //     </Button>\n      //   </InputGroup.Append>\n      // </InputGroup>\n      null, /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasimg,\n        height: \"500\",\n        width: \"500\",\n        style: {\n          position: \"absolute\",\n          left: \"0\",\n          top: \"0\",\n          zIndex: \"0\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvas,\n        height: \"500\",\n        width: \"500\",\n        onMouseDown: handleMouseDown,\n        onMouseUp: handleMouseUp,\n        onMouseMove: handleMouseMove,\n        style: {\n          position: \"absolute\",\n          left: \"0\",\n          top: \"0\",\n          zIndex: \"1\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImgUpload, \"+hJLvi16VjkzmDb6TrwS/fay2tE=\");\n\n_c = ImgUpload;\nexport default ImgUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImgUpload\");","map":{"version":3,"sources":["/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/ImgUpload/ImgUpload.js"],"names":["React","useRef","useEffect","useState","Upload","Tag","Button","InputGroup","FormControl","ImgUpload","sendPicture","canvas","canvasimg","start","setStart","finish","setFinish","width","setWidth","height","setHeight","mouseDown","setMouseDown","ctxImg","setCtxImg","ctx","setCtx","loading","setLoading","image","setImage","tag","setTag","current","getContext","handleImage","e","reader","FileReader","onload","event","img","Image","drawImage","src","target","result","readAsDataURL","files","handleMouseDown","preventDefault","stopPropagation","nativeEvent","offsetX","offsetY","handleMouseUp","handleMouseMove","toDataURL","clearRect","strokeStyle","startx","starty","strokeRect","handleTag","font","fillText","imageData","getImageData","position","padding","left","top","zIndex"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport Upload from \"./Upload/Upload\";\nimport Tag from \"./Tag/Tag\";\nimport { Button, InputGroup, FormControl } from \"react-bootstrap\";\n\nimport \"./ImgUpload.css\";\n\nconst ImgUpload = ({ sendPicture }) => {\n  const canvas = useRef(null);\n  const canvasimg = useRef(null);\n\n  const [start, setStart] = useState([]);\n  const [finish, setFinish] = useState([]);\n  const [width, setWidth] = useState(null);\n  const [height, setHeight] = useState(null);\n  const [mouseDown, setMouseDown] = useState(false);\n  const [ctxImg, setCtxImg] = useState({});\n  const [ctx, setCtx] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [image, setImage] = useState({});\n  const [tag, setTag] = useState(\"\");\n\n  useEffect(() => {\n    setCtxImg(canvasimg.current.getContext(\"2d\"));\n    setCtx(canvas.current.getContext(\"2d\"));\n  }, []);\n\n  const handleImage = (e) => {\n    var reader = new FileReader();\n    reader.onload = function (event) {\n      var img = new Image();\n      img.onload = function () {\n        ctxImg.drawImage(img, 0, 0, 500, 500);\n        setLoading(false);\n      };\n      img.src = event.target.result;\n    };\n    reader.readAsDataURL(e.target.files[0]);\n  };\n\n  const handleMouseDown = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setFinish([]);\n    setMouseDown(true);\n    setStart([e.nativeEvent.offsetX, e.nativeEvent.offsetY]);\n  };\n\n  const handleMouseUp = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setMouseDown(false);\n  };\n\n  const handleMouseMove = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!mouseDown) {\n      sendPicture(canvasimg.current.toDataURL(\"image/png\"));\n      return;\n    }\n\n    setFinish([e.nativeEvent.offsetX, e.nativeEvent.offsetY]);\n    ctx.clearRect(0, 0, canvas.current.width, canvas.current.height);\n    ctx.strokeStyle = \"black\";\n\n    const startx = start[0];\n    const starty = start[1];\n    const width = finish[0] - start[0];\n    const height = finish[1] - start[1];\n\n    ctx.strokeRect(startx, starty, width, height);\n\n    setWidth(finish[0] - start[0]);\n    setHeight(finish[1] - start[1]);\n  };\n\n  const handleTag = (e) => {\n    ctxImg.strokeRect(start[0], start[1], width, height);\n\n    if (tag) {\n      ctxImg.font = \"20px roboto\";\n      ctxImg.fillText(tag, finish[0], finish[1]);\n    }\n    let imageData = ctxImg.getImageData(0, 0, 500, 500);\n\n    setImage(imageData);\n    setHeight(null);\n    setWidth(null);\n    setTag(\"\");\n    sendPicture(canvasimg.current.toDataURL(\"image/png\"));\n  };\n\n  return (\n    <React.Fragment>\n      {loading ? <Upload handleImage={handleImage} /> : null}\n      <div\n        style={{\n          position: \"absolute\",\n          width: \"500px\",\n          height: \"500px\",\n          padding: \"30px\",\n        }}\n      >\n        {height ? (\n          <Tag />\n        ) : // <InputGroup\n        //   className=\"mb-3\"\n        //   style={{ zIndex: \"3\", position: \"absolute\" }}\n        // >\n        //   <FormControl\n        //     placeholder=\"Choose a tag's name\"\n        //     aria-label=\"Choose a tag's name\"\n        //     aria-describedby=\"basic-addon2\"\n        //     onChange={(e) => {\n        //       setTag(e.target.value);\n        //     }}\n        //     value={tag}\n        //   />\n        //   <InputGroup.Append>\n        //     <Button variant=\"outline-secondary\" onClick={handleTag}>\n        //       <i class=\"fas fa-user-tag\"></i>Tag\n        //     </Button>\n        //   </InputGroup.Append>\n        // </InputGroup>\n        null}\n        <canvas\n          ref={canvasimg}\n          height=\"500\"\n          width=\"500\"\n          style={{ position: \"absolute\", left: \"0\", top: \"0\", zIndex: \"0\" }}\n        ></canvas>\n        <canvas\n          ref={canvas}\n          height=\"500\"\n          width=\"500\"\n          onMouseDown={handleMouseDown}\n          onMouseUp={handleMouseUp}\n          onMouseMove={handleMouseMove}\n          style={{ position: \"absolute\", left: \"0\", top: \"0\", zIndex: \"1\" }}\n        ></canvas>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default ImgUpload;\n"]},"metadata":{},"sourceType":"module"}