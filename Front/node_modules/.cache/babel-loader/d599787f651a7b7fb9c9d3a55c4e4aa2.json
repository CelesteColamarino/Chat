{"ast":null,"code":"var _jsxFileName = \"/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/Chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport InfoBar from \"../InfoBar/InfoBar\";\nimport Input from \"../Input/Input\";\nimport Messages from \"../Messages/Messages\";\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  console.log(\"entrando al chat\");\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const sendingPicture = picture => {\n    setMessage(picture);\n  };\n\n  const ENDPOINT = \"localhost:5000\";\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit(\"join\", {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit(\"disconnected\");\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on(\"message\", message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n\n    if (message) {\n      socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    style: {\n      backgroundImage: \"url(/images/bg01.svg)\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {\n        messages: messages,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        message: message,\n        setMessage: setMessage,\n        sendMessage: sendMessage,\n        sendingPicture: sendingPicture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"DGTtK+cnWWSeRGiKbfaQ0Z+rBO8=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","Input","Messages","socket","Chat","location","console","log","name","setName","room","setRoom","message","setMessage","messages","setMessages","sendingPicture","picture","ENDPOINT","parse","search","emit","off","on","sendMessage","e","preventDefault","backgroundImage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\n\nimport InfoBar from \"../InfoBar/InfoBar\";\nimport Input from \"../Input/Input\";\nimport Messages from \"../Messages/Messages\";\n\nimport \"./Chat.css\";\n\nlet socket;\n\nconst Chat = ({ location }) => {\n  console.log(\"entrando al chat\");\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const sendingPicture = (picture) => {\n    setMessage(picture);\n  };\n\n  const ENDPOINT = \"localhost:5000\";\n\n  useEffect(() => {\n    const { name, room } = queryString.parse(location.search);\n\n    socket = io(ENDPOINT);\n\n    setName(name);\n    setRoom(room);\n\n    socket.emit(\"join\", { name, room }, () => {});\n\n    return () => {\n      socket.emit(\"disconnected\");\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n\n  useEffect(() => {\n    socket.on(\"message\", (message) => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    if (message) {\n      socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\n    }\n  };\n\n  return (\n    <div\n      className=\"outerContainer\"\n      style={{ backgroundImage: \"url(/images/bg01.svg)\" }}\n    >\n      <div className=\"container\">\n        <InfoBar room={room} />\n        <Messages messages={messages} name={name} />\n\n        <Input\n          message={message}\n          setMessage={setMessage}\n          sendMessage={sendMessage}\n          sendingPicture={sendingPicture}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}