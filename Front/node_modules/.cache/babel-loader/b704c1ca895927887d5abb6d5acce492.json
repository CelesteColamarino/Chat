{"ast":null,"code":"var _jsxFileName = \"/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/ImgUpload/ImgUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImgUpload = () => {\n  _s();\n\n  const canvas = useRef(null);\n  const [start, setStart] = useState([]);\n  const [finish, setFinish] = useState([]);\n  const [mouseDown, setMouseDown] = useState(false);\n  let ctx;\n  useEffect(() => {\n    ctx = canvas.current.getContext(\"2d\");\n  }); //   useEffect(() => {\n  //     console.log(start, finish);\n  //     const draw = () => {\n  //       ctx = canvas.current.getContext(\"2d\");\n  //       ctx.strokeStyle = \"#065fe3d4\";\n  //       //   ctx.clearRect(0, 0, canvas.current.width, canvas.current.height);\n  //       ctx.strokeRect(\n  //         start[0],\n  //         start[1],\n  //         finish[0] - start[0],\n  //         finish[1] - start[1]\n  //       );\n  //     };\n  //     if (mouseDown) {\n  //       draw();\n  //     }\n  //   }, [finish]);\n\n  const handleImage = e => {\n    var reader = new FileReader();\n\n    reader.onload = function (event) {\n      var img = new Image();\n\n      img.onload = function () {\n        canvas.current.width = img.width;\n        canvas.current.height = img.height;\n        ctx.drawImage(img, 0, 0);\n      };\n\n      img.src = event.target.result;\n    };\n\n    reader.readAsDataURL(e.target.files[0]);\n  };\n\n  const mouseClicked = e => {\n    setFinish([]);\n    setMouseDown(true);\n    setStart([e.nativeEvent.offsetX, e.nativeEvent.offsetY]);\n  };\n\n  const mouseReleased = e => {\n    setMouseDown(false);\n  };\n\n  const mouseMove = e => {\n    if (mouseDown) {\n      setFinish([e.nativeEvent.offsetX, e.nativeEvent.offsetY]);\n\n      const draw = () => {\n        ctx = canvas.current.getContext(\"2d\");\n        ctx.strokeStyle = \"#065fe3d4\"; //   ctx.clearRect(0, 0, canvas.current.width, canvas.current.height);\n\n        const startx = start[0];\n        const starty = start[1];\n        const finishx = finish[0] - start[0];\n        const finishy = finish[1] - start[1];\n        ctx.strokeRect(startx, starty, finishx, finishy);\n      };\n\n      draw();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Image File:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleImage,\n      type: \"file\",\n      name: \"imageLoader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      style: {\n        maxWidth: \"50vw\",\n        maxHeight: \"70vh\"\n      },\n      ref: canvas,\n      onMouseDown: mouseClicked,\n      onMouseUp: mouseReleased,\n      onMouseMove: mouseMove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImgUpload, \"Mtmo3s+nl1RTtbOlrNfpvQ+pr44=\");\n\n_c = ImgUpload;\nexport default ImgUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImgUpload\");","map":{"version":3,"sources":["/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/ImgUpload/ImgUpload.js"],"names":["React","useRef","useEffect","useState","ImgUpload","canvas","start","setStart","finish","setFinish","mouseDown","setMouseDown","ctx","current","getContext","handleImage","e","reader","FileReader","onload","event","img","Image","width","height","drawImage","src","target","result","readAsDataURL","files","mouseClicked","nativeEvent","offsetX","offsetY","mouseReleased","mouseMove","draw","strokeStyle","startx","starty","finishx","finishy","strokeRect","maxWidth","maxHeight"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\n\nconst ImgUpload = () => {\n  const canvas = useRef(null);\n\n  const [start, setStart] = useState([]);\n  const [finish, setFinish] = useState([]);\n  const [mouseDown, setMouseDown] = useState(false);\n\n  let ctx;\n\n  useEffect(() => {\n    ctx = canvas.current.getContext(\"2d\");\n  });\n\n  //   useEffect(() => {\n  //     console.log(start, finish);\n  //     const draw = () => {\n  //       ctx = canvas.current.getContext(\"2d\");\n  //       ctx.strokeStyle = \"#065fe3d4\";\n  //       //   ctx.clearRect(0, 0, canvas.current.width, canvas.current.height);\n  //       ctx.strokeRect(\n  //         start[0],\n  //         start[1],\n  //         finish[0] - start[0],\n  //         finish[1] - start[1]\n  //       );\n  //     };\n  //     if (mouseDown) {\n  //       draw();\n  //     }\n  //   }, [finish]);\n\n  const handleImage = (e) => {\n    var reader = new FileReader();\n    reader.onload = function (event) {\n      var img = new Image();\n      img.onload = function () {\n        canvas.current.width = img.width;\n        canvas.current.height = img.height;\n        ctx.drawImage(img, 0, 0);\n      };\n      img.src = event.target.result;\n    };\n    reader.readAsDataURL(e.target.files[0]);\n  };\n\n  const mouseClicked = (e) => {\n    setFinish([]);\n    setMouseDown(true);\n\n    setStart([e.nativeEvent.offsetX, e.nativeEvent.offsetY]);\n  };\n\n  const mouseReleased = (e) => {\n    setMouseDown(false);\n  };\n\n  const mouseMove = (e) => {\n    if (mouseDown) {\n      setFinish([e.nativeEvent.offsetX, e.nativeEvent.offsetY]);\n      const draw = () => {\n        ctx = canvas.current.getContext(\"2d\");\n        ctx.strokeStyle = \"#065fe3d4\";\n        //   ctx.clearRect(0, 0, canvas.current.width, canvas.current.height);\n        const startx = start[0];\n        const starty = start[1];\n        const finishx = finish[0] - start[0];\n        const finishy = finish[1] - start[1];\n\n        ctx.strokeRect(startx, starty, finishx, finishy);\n      };\n      draw();\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <label>Image File:</label>\n      <input onChange={handleImage} type=\"file\" name=\"imageLoader\" />\n\n      <canvas\n        style={{ maxWidth: \"50vw\", maxHeight: \"70vh\" }}\n        ref={canvas}\n        onMouseDown={mouseClicked}\n        onMouseUp={mouseReleased}\n        onMouseMove={mouseMove}\n      ></canvas>\n    </React.Fragment>\n  );\n};\n\nexport default ImgUpload;\n"]},"metadata":{},"sourceType":"module"}