{"ast":null,"code":"var _jsxFileName = \"/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/ImgUpload/ImgUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImgUpload = () => {\n  _s();\n\n  //   var imageLoader = document.getElementById(\"imageLoader\");\n  //   imageLoader.addEventListener(\"change\", handleImage, false);\n  const canvas = useRef(null); //   var ctx = canvas.getContext(\"2d\");\n\n  let ctx;\n  useEffect(() => {\n    ctx = canvas.current.getContext(\"2d\");\n  });\n\n  const handleImage = e => {\n    var reader = new FileReader();\n\n    reader.onload = function (event) {\n      var img = new Image();\n\n      img.onload = function () {\n        canvas.current.width = img.width;\n        canvas.current.height = img.height;\n        ctx.drawImage(img, 0, 0);\n      };\n\n      img.src = event.target.result;\n    };\n\n    reader.readAsDataURL(e.target.files[0]);\n  };\n\n  const draw = e => {\n    console.log(e);\n    ctx = canvas.current.getContext(\"2d\");\n    ctx.strokeRect(50, 50, 50, 50);\n  };\n\n  const startDraw = e => {\n    // console.log(canvas);\n    const width = canvas.current.clientWidth;\n    const height = canvas.current.clientHeight;\n    console.log(`la altura es ${width}, el ancho es ${height}`);\n  };\n\n  const startDrawTwo = e => {\n    console.log(e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Image File:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleImage,\n      type: \"file\",\n      id: \"imageLoader\",\n      name: \"imageLoader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvas,\n      onClick: draw,\n      onMouseDown: startDrawTwo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImgUpload, \"Iosu+jEjScFAX5hfSp9z4J61DK4=\");\n\n_c = ImgUpload;\nexport default ImgUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImgUpload\");","map":{"version":3,"sources":["/Users/celeste/Documents/Programacion/Practica/Challenge/Scale/scalechat/Front/src/components/ImgUpload/ImgUpload.js"],"names":["React","useRef","useEffect","useState","ImgUpload","canvas","ctx","current","getContext","handleImage","e","reader","FileReader","onload","event","img","Image","width","height","drawImage","src","target","result","readAsDataURL","files","draw","console","log","strokeRect","startDraw","clientWidth","clientHeight","startDrawTwo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB;AACA;AACA,QAAMC,MAAM,GAAGJ,MAAM,CAAC,IAAD,CAArB,CAHsB,CAItB;;AAEA,MAAIK,GAAJ;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,GAAG,GAAGD,MAAM,CAACE,OAAP,CAAeC,UAAf,CAA0B,IAA1B,CAAN;AACD,GAFQ,CAAT;;AAIA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzB,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,UAAUC,KAAV,EAAiB;AAC/B,UAAIC,GAAG,GAAG,IAAIC,KAAJ,EAAV;;AACAD,MAAAA,GAAG,CAACF,MAAJ,GAAa,YAAY;AACvBR,QAAAA,MAAM,CAACE,OAAP,CAAeU,KAAf,GAAuBF,GAAG,CAACE,KAA3B;AACAZ,QAAAA,MAAM,CAACE,OAAP,CAAeW,MAAf,GAAwBH,GAAG,CAACG,MAA5B;AACAZ,QAAAA,GAAG,CAACa,SAAJ,CAAcJ,GAAd,EAAmB,CAAnB,EAAsB,CAAtB;AACD,OAJD;;AAKAA,MAAAA,GAAG,CAACK,GAAJ,GAAUN,KAAK,CAACO,MAAN,CAAaC,MAAvB;AACD,KARD;;AASAX,IAAAA,MAAM,CAACY,aAAP,CAAqBb,CAAC,CAACW,MAAF,CAASG,KAAT,CAAe,CAAf,CAArB;AACD,GAZD;;AAcA,QAAMC,IAAI,GAAIf,CAAD,IAAO;AAClBgB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,CAAZ;AACAJ,IAAAA,GAAG,GAAGD,MAAM,CAACE,OAAP,CAAeC,UAAf,CAA0B,IAA1B,CAAN;AACAF,IAAAA,GAAG,CAACsB,UAAJ,CAAe,EAAf,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,EAA3B;AACD,GAJD;;AAMA,QAAMC,SAAS,GAAInB,CAAD,IAAO;AACvB;AACA,UAAMO,KAAK,GAAGZ,MAAM,CAACE,OAAP,CAAeuB,WAA7B;AACA,UAAMZ,MAAM,GAAGb,MAAM,CAACE,OAAP,CAAewB,YAA9B;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeV,KAAM,iBAAgBC,MAAO,EAAzD;AACD,GALD;;AAOA,QAAMc,YAAY,GAAItB,CAAD,IAAO;AAC1BgB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,CAAZ;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,QAAQ,EAAED,WADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,EAAE,EAAC,aAHL;AAIE,MAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE;AAAQ,MAAA,GAAG,EAAEJ,MAAb;AAAqB,MAAA,OAAO,EAAEoB,IAA9B;AAAoC,MAAA,WAAW,EAAEO;AAAjD;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAvDD;;GAAM5B,S;;KAAAA,S;AAyDN,eAAeA,SAAf","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\n\nconst ImgUpload = () => {\n  //   var imageLoader = document.getElementById(\"imageLoader\");\n  //   imageLoader.addEventListener(\"change\", handleImage, false);\n  const canvas = useRef(null);\n  //   var ctx = canvas.getContext(\"2d\");\n\n  let ctx;\n\n  useEffect(() => {\n    ctx = canvas.current.getContext(\"2d\");\n  });\n\n  const handleImage = (e) => {\n    var reader = new FileReader();\n    reader.onload = function (event) {\n      var img = new Image();\n      img.onload = function () {\n        canvas.current.width = img.width;\n        canvas.current.height = img.height;\n        ctx.drawImage(img, 0, 0);\n      };\n      img.src = event.target.result;\n    };\n    reader.readAsDataURL(e.target.files[0]);\n  };\n\n  const draw = (e) => {\n    console.log(e);\n    ctx = canvas.current.getContext(\"2d\");\n    ctx.strokeRect(50, 50, 50, 50);\n  };\n\n  const startDraw = (e) => {\n    // console.log(canvas);\n    const width = canvas.current.clientWidth;\n    const height = canvas.current.clientHeight;\n    console.log(`la altura es ${width}, el ancho es ${height}`);\n  };\n\n  const startDrawTwo = (e) => {\n    console.log(e);\n  };\n\n  return (\n    <React.Fragment>\n      <label>Image File:</label>\n      <input\n        onChange={handleImage}\n        type=\"file\"\n        id=\"imageLoader\"\n        name=\"imageLoader\"\n      />\n      <canvas ref={canvas} onClick={draw} onMouseDown={startDrawTwo}></canvas>\n    </React.Fragment>\n  );\n};\n\nexport default ImgUpload;\n"]},"metadata":{},"sourceType":"module"}